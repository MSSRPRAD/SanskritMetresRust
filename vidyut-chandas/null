   Compiling vidyut-chandas v0.1.0 (/home/pradyumnamalladi/Desktop/SanskritMetresRust/vidyut-chandas)
warning: unreachable pattern
  --> vidyut-chandas/src/identify.rs:86:21
   |
86 |                     _ => String::from("SOME ERROR HAPPENED!")
   |                     ^
   |
   = note: `#[warn(unreachable_patterns)]` on by default

warning: value assigned to `distance` is never read
   --> vidyut-chandas/src/identify.rs:116:13
    |
116 |     let mut distance: usize = 99999;
    |             ^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `exp_len`
   --> vidyut-chandas/src/identify.rs:119:17
    |
119 |             let exp_len = 0;
    |                 ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exp_len`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
  --> vidyut-chandas/src/identify.rs:72:13
   |
72 |         let mut distance = levenshtein(&input_scheme, &pattern_scheme);
   |             ----^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: field `comment` is never read
  --> vidyut-chandas/src/identify.rs:20:5
   |
19 | pub struct VrttaData {
   |            --------- field in this struct
20 |     comment: Vec<String>,
   |     ^^^^^^^
   |
   = note: `VrttaData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: constant `hrasva` should have an upper case name
 --> vidyut-chandas/src/scheme.rs:8:7
  |
8 | const hrasva: &str = "aiufx";
  |       ^^^^^^ help: convert the identifier to upper case: `HRASVA`
  |
  = note: `#[warn(non_upper_case_globals)]` on by default

warning: constant `dirgha` should have an upper case name
  --> vidyut-chandas/src/scheme.rs:10:7
   |
10 | const dirgha: &str = "AIUeEoOFX";
   |       ^^^^^^ help: convert the identifier to upper case: `DIRGHA`

warning: constant `others` should have an upper case name
  --> vidyut-chandas/src/scheme.rs:14:7
   |
14 | const others: &str = "MH";
   |       ^^^^^^ help: convert the identifier to upper case: `OTHERS`

warning: function `is_HAL` should have a snake case name
  --> vidyut-chandas/src/scheme.rs:78:8
   |
78 | pub fn is_HAL(c: Sound) -> bool {
   |        ^^^^^^ help: convert the identifier to snake case: `is_hal`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: function `identify_Sama_Vrtta` should have a snake case name
  --> vidyut-chandas/src/identify.rs:53:8
   |
53 | pub fn identify_Sama_Vrtta(a: &String, s: &Vec::<Metre>) -> usize {
   |        ^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `identify_sama_vrtta`

warning: variable `gantE` should have a snake case name
  --> vidyut-chandas/src/identify.rs:60:17
   |
60 |         let mut gantE = false;
   |                 ^^^^^ help: convert the identifier to snake case: `gant_e`

warning: function `identify_Ardha_Sama_Vrtta` should have a snake case name
   --> vidyut-chandas/src/identify.rs:105:8
    |
105 | pub fn identify_Ardha_Sama_Vrtta(a: &Vec::<String>, s: &Vec::<Metre>) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `identify_ardha_sama_vrtta`

warning: function `is_Sama_Vrtta` should have a snake case name
   --> vidyut-chandas/src/identify.rs:172:8
    |
172 | pub fn is_Sama_Vrtta(s: &Vec::<Metre>) -> bool {
    |        ^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `is_sama_vrtta`

warning: `vidyut-chandas` (bin "vidyut-chandas") generated 13 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.42s
     Running `/home/pradyumnamalladi/Desktop/SanskritMetresRust/target/debug/vidyut-chandas`
