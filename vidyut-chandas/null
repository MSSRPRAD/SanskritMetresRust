   Compiling vidyut-chandas v0.1.0 (/home/pradyumnamalladi/Desktop/SanskritMetresRust/vidyut-chandas)
warning: type `vrtta_data` should have an upper camel case name
  --> vidyut-chandas/src/identify.rs:16:12
   |
16 | pub struct vrtta_data {
   |            ^^^^^^^^^^ help: convert the identifier to upper camel case: `VrttaData`
   |
   = note: `#[warn(non_camel_case_types)]` on by default

warning: type `vrtta` should have an upper camel case name
  --> vidyut-chandas/src/identify.rs:23:8
   |
23 | struct vrtta {
   |        ^^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Vrtta`

warning: unused doc comment
  --> vidyut-chandas/src/identify.rs:53:5
   |
53 |       /// no flexibility for गन्ते also
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
54 | /     if a.len() != s.len()/4 {
55 | |         false
56 | |     } else {
57 | |         let mut cond = true;
...  |
84 | |         return true;
85 | |     }
   | |_____- rustdoc does not generate documentation for expressions
   |
   = help: use `//` for a plain comment
   = note: `#[warn(unused_doc_comments)]` on by default

warning: unused doc comment
  --> vidyut-chandas/src/identify.rs:59:9
   |
59 | /         /// s[i].unwrap() gives svara of input string
60 | |         /// a.chars().nth(i).unwrap() gives svara of scheme
   | |___________________________________________________________^
61 | /         for i in 0..s.len(){
62 | |             let pada_length = s.len()/4;
63 | |             if s[i].unwrap() != a.chars().nth(i%pada_length).unwrap() && i%pada_length != pada_length-1 {
64 | |                 cond = false;
...  |
79 | |             }
80 | |         }
   | |_________- rustdoc does not generate documentation for expressions
   |
   = help: use `//` for a plain comment

warning: unused doc comment
  --> vidyut-chandas/src/identify.rs:98:9
   |
98 |         /// 1) String or 2) List of Strings
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
99 |         let mut vec = Vec::new();
   |         ------------------------- rustdoc does not generate documentation for statements
   |
   = help: use `//` for a plain comment

warning: field `comment` is never read
  --> vidyut-chandas/src/identify.rs:18:5
   |
16 | pub struct vrtta_data {
   |            ---------- field in this struct
17 |     
18 |     comment: Vec<String>,
   |     ^^^^^^^
   |
   = note: `vrtta_data` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: constant `hrasva` should have an upper case name
 --> vidyut-chandas/src/scheme.rs:8:7
  |
8 | const hrasva: &str = "aiufx";
  |       ^^^^^^ help: convert the identifier to upper case: `HRASVA`
  |
  = note: `#[warn(non_upper_case_globals)]` on by default

warning: constant `dirgha` should have an upper case name
  --> vidyut-chandas/src/scheme.rs:10:7
   |
10 | const dirgha: &str = "AIUeEoOFX";
   |       ^^^^^^ help: convert the identifier to upper case: `DIRGHA`

warning: constant `others` should have an upper case name
  --> vidyut-chandas/src/scheme.rs:14:7
   |
14 | const others: &str = "MH";
   |       ^^^^^^ help: convert the identifier to upper case: `OTHERS`

warning: function `is_HAL` should have a snake case name
  --> vidyut-chandas/src/scheme.rs:78:8
   |
78 | pub fn is_HAL(c: Sound) -> bool {
   |        ^^^^^^ help: convert the identifier to snake case: `is_hal`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `gantE` should have a snake case name
  --> vidyut-chandas/src/identify.rs:58:17
   |
58 |         let mut gantE = false;
   |                 ^^^^^ help: convert the identifier to snake case: `gant_e`

warning: `vidyut-chandas` (bin "vidyut-chandas") generated 11 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 0.24s
     Running `/home/pradyumnamalladi/Desktop/SanskritMetresRust/target/debug/vidyut-chandas`
